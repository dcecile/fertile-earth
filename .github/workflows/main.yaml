name: Main

on: [push]

# secrets:
#  - DATABASE_CA_CRT
#  - DATABASE_URL_ADMIN
#  - FLY_ACCESS_TOKEN

jobs:
  node:
    name: Node
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache /tmp/cockroach
        uses: actions/cache@v1
        with:
          path: /tmp/cockroach-v21.2.0.linux-amd64
          key: cockroach-v21.2.0.linux-amd64

      - name: Set up CockroachDB
        run: |
          if [ ! -d /tmp/cockroach-v21.2.0.linux-amd64 ]; then curl -fsSL https://binaries.cockroachdb.com/cockroach-v21.2.0.linux-amd64.tgz | tar xvzC /tmp; fi
          sudo cp /tmp/cockroach-v21.2.0.linux-amd64/cockroach /usr/local/bin
          sudo mkdir /usr/local/lib/cockroach
          sudo cp /tmp/cockroach-v21.2.0.linux-amd64/lib/libgeos.so /usr/local/lib/cockroach/
          sudo cp /tmp/cockroach-v21.2.0.linux-amd64/lib/libgeos_c.so /usr/local/lib/cockroach/

      - name: Set up direnv
        run: |
          curl -fsSL https://github.com/direnv/direnv/releases/latest/download/direnv.linux-amd64 | sudo tee /usr/local/bin/direnv > /dev/null
          sudo chmod +x /usr/local/bin/direnv
          echo > .env
          direnv allow

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 17

      - name: Cache .pnpm-store
        uses: actions/cache@v1
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('./pnpm-lock.yaml') }}

      - name: Set up pnpm
        run: |
          curl -fsSL https://pnpm.js.org/pnpm.js | node - add --global pnpm
          pnpm install --frozen-lockfile

      - name: Check formatting
        run: pnpm check-fmt

      - name: Check lint
        run: pnpm check-lint

      - name: Check TypeScript
        run: pnpm check-tsc

      - name: Test
        run: direnv exec . pnpm test

      - name: Build
        run: direnv exec . pnpm build

      - name: Upload output
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: node
          path: build

  rust:
    name: Rust
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Rust toolchain
        uses: actions/cache@v2
        with:
          path: /usr/share/rust/.rustup
          key: rust-toolchain-${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v1

      - name: Set up Cargo
        run: cargo fetch --locked

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Check lint
        run: cargo check-clippy

      - name: Check rustc
        if: github.ref != 'refs/heads/main'
        run: cargo check

      - name: Test
        if: github.ref != 'refs/heads/main'
        run: cargo test

      - name: Build
        if: github.ref == 'refs/heads/main'
        run: cargo build --release

      - name: Test (release)
        if: github.ref == 'refs/heads/main'
        run: cargo test --release

      - name: Upload output
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: rust
          path: target/release/fertile-earth

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [node, rust]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up direnv
        run: |
          curl -fsSL https://github.com/direnv/direnv/releases/latest/download/direnv.linux-amd64 | sudo tee /usr/local/bin/direnv > /dev/null
          sudo chmod +x /usr/local/bin/direnv
          echo > .env
          direnv allow

      - name: Set up Fly
        run: |
          curl -fsSL https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      - name: Set up Dbmate
        run: |
          curl -fsSL https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64 | sudo tee /usr/local/bin/dbmate > /dev/null
          sudo chmod +x /usr/local/bin/dbmate

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 17

      - name: Cache .pnpm-store
        uses: actions/cache@v1
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('./pnpm-lock.yaml') }}

      - name: Set up pnpm
        run: |
          curl -fsSL https://pnpm.js.org/pnpm.js | node - add --global pnpm
          pnpm install --frozen-lockfile --prod

      - name: Download Node output
        uses: actions/download-artifact@v2
        with:
          name: node
          path: build

      - name: Download Rust output
        uses: actions/download-artifact@v2
        with:
          name: rust
          path: target/release

      - name: Fix permissions
        run: chmod +x target/release/fertile-earth

      - name: Migrate DB
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p .crdb/certs
          echo "${DATABASE_CA_CRT}" > .crdb/certs/cc-ca.crt
          direnv exec . dbmate --url ${DATABASE_URL_ADMIN} migrate
        env:
          DATABASE_CA_CRT: ${{ secrets.DATABASE_CA_CRT }}
          DATABASE_URL_ADMIN: ${{ secrets.DATABASE_URL_ADMIN }}

      - name: Deploy app
        if: github.ref == 'refs/heads/main'
        run: direnv exec . fly deploy --build-arg NODE_OPTIONS="${NODE_OPTIONS_PRODUCTION}" --config app
        env:
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}

      - name: Deploy FTS
        if: github.ref == 'refs/heads/main'
        run: direnv exec . fly deploy --config fts
        env:
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}

      - name: Deploy cache
        if: github.ref == 'refs/heads/main'
        run: direnv exec . fly deploy --config cache
        env:
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}
