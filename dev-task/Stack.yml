version: '3'
  
run: when_changed
  
tasks:
  clean:
    cmd: stack clean --full

  install:
    deps:
      - :dev-stack-bin:install

  build:debug:
    aliases:
      - build
      - b
    cmd: stack build --test --no-run-tests --keep-going

  build:release:
    aliases:
      - br
    cmd: stack build --test --no-run-tests --keep-going --ghc-options "-O2 -g0 -Werror"

  build:debug:watch:
    aliases:
      - build:watch
      - bw
    cmd: stack build --test --no-run-tests --keep-going --file-watch

  format:
    internal: true
    requires:
      vars:
        - NAME
    cmd: ormolu --mode inplace $(find {{.NAME}}/{app,src,test} -name '*.hs')

  format:check:
    internal: true
    requires:
      vars:
        - NAME
    cmd: ormolu --mode check $(find {{.NAME}}/{app,src,test} -name '*.hs')

  lint:
    internal: true
    requires:
      vars:
        - NAME
    vars:
      STACK_LOCAL_BIN_PATH:
        sh: realpath --relative-to . {{.STACK_LOCAL_BIN_PATH}}
    cmd: hlint --hint {{.STACK_LOCAL_BIN_PATH}}/relude-hlint.yaml --hint dev-hlint/base.yaml --threads {{.NAME}}/{app,src,test}

  repl-target:
    internal: true
    requires:
      vars:
        - NAME
    cmd: stack ghci intertwine-{{.NAME}}
  
  run:
    internal: true
    requires:
      vars:
        - NAME
    cmd:
      task: execute-target
      vars:
        NAME: "{{.NAME}}"
        TARGET: intertwine-{{.NAME}}-exe
  
  run:watch:
    internal: true
    requires:
      vars:
        - NAME
    cmd:
      task: execute-target:watch
      vars:
        NAME: "{{.NAME}}"
        TARGET: intertwine-{{.NAME}}-exe
  
  test:
    internal: true
    requires:
      vars:
        - NAME
    cmd:
      task: execute-target
      vars:
        NAME: "{{.NAME}}"
        TARGET: intertwine-{{.NAME}}-test
  
  test:watch:
    internal: true
    requires:
      vars:
        - NAME
    cmd:
      task: execute-target:watch
      vars:
        NAME: "{{.NAME}}"
        TARGET: intertwine-{{.NAME}}-test
  
  execute-target:
    internal: true
    requires:
      vars:
        - NAME
        - TARGET
    vars:
      DIST_DIR:
        sh: realpath --relative-to . $(sh -c "$(cd {{.NAME}} && stack config env) echo \$HASKELL_DIST_DIR")
    cmd: "{{.DIST_DIR}}/build/{{.TARGET}}/{{.TARGET}} {{.CLI_ARGS}}"
  
  execute-target:watch:
    internal: true
    requires:
      vars:
        - NAME
        - TARGET
    vars:
      DIST_DIR:
        sh: realpath --relative-to . $(sh -c "$(cd {{.NAME}} && stack config env) echo \$HASKELL_DIST_DIR")
    cmd: watchexec --fs-events create,rename,modify --debounce 150ms --no-vcs-ignore --watch {{.DIST_DIR}}/build/{{.TARGET}} --filter {{.TARGET}} -- {{.DIST_DIR}}/build/{{.TARGET}}/{{.TARGET}} {{.CLI_ARGS}}
