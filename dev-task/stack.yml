version: '3'

run: when_changed

vars:
  RELEASE_OPTIONS: "--ghc-options '-O2 -g0 -Werror'"

tasks:
  install:
    deps:
      - :dev-stack-bin:install

  clean:
    deps:
      - task: clean:mode
        vars:
          MODE: debug
      - task: clean:mode
        vars:
          MODE: release

  clean:mode:
    internal: true
    requires:
      vars:
        - MODE
    cmd: stack clean --work-dir build/stack-work-{{.MODE}} --full

  build:debug:
    aliases:
      - build
      - b
    cmd: stack build --test --no-run-tests --keep-going

  build:release:
    aliases:
      - br
    cmd: stack build --work-dir build/stack-work-release --test --no-run-tests --keep-going {{.RELEASE_OPTIONS}}

  build:debug:watch:
    aliases:
      - build:watch
      - bw
    cmd: stack build --test --no-run-tests --keep-going --file-watch

  test:debug:
    aliases:
      - test
      - t
    deps:
      - build:debug
    cmd: stack build --test --keep-going

  test:release:
    aliases:
      - tr
    deps:
      - build:release
    cmd: stack build --work-dir build/stack-work-release --test --keep-going {{.RELEASE_OPTIONS}}

  format-folders:check:
    internal: true
    requires:
      vars:
        - NAMES
    cmd: ormolu --mode check $(fd -g '*.hs' $(fd -d 1 -g '{app,src,test}' {{.NAMES}}))

  format-folders:fix:
    internal: true
    requires:
      vars:
        - NAMES
    cmd: ormolu --mode inplace $(fd -g '*.hs' $(fd -d 1 -g '{app,src,test}' {{.NAMES}}))

  lint-folders:check:
    internal: true
    requires:
      vars:
        - NAMES
    vars:
      STACK_LOCAL_BIN_PATH:
        sh: realpath --relative-to . {{.STACK_LOCAL_BIN_PATH}}
    cmd: hlint --hint {{.STACK_LOCAL_BIN_PATH}}/relude-hlint.yaml --hint dev-hlint/base.yaml --threads $(fd -g '*.hs' $(fd -d 1 -g '{app,src,test}' {{.NAMES}}))

  repl-target:
    internal: true
    requires:
      vars:
        - MODE
        - NAME
    cmd: stack ghci --work-dir build/stack-work-{{.MODE}} intertwine-{{.NAME}}

  execute-target:
    internal: true
    requires:
      vars:
        - MODE
        - NAME
        - TARGET
    vars:
      DIST_DIR:
        sh: realpath --relative-to . $(sh -c "$(cd {{.NAME}} && stack config env --work-dir build/stack-work-{{.MODE}}) echo \$HASKELL_DIST_DIR")
      FULL_TARGET: intertwine-{{.NAME}}-{{.TARGET}}
    cmd: '{{.DIST_DIR}}/build/{{.FULL_TARGET}}/{{.FULL_TARGET}} {{.ARGS}} {{.CLI_ARGS}}'

  execute-target:watch:
    internal: true
    requires:
      vars:
        - MODE
        - NAME
        - TARGET
    vars:
      DIST_DIR:
        sh: realpath --relative-to . $(sh -c "$(cd {{.NAME}} && stack config env --work-dir build/stack-work-{{.MODE}}) echo \$HASKELL_DIST_DIR")
      FULL_TARGET: intertwine-{{.NAME}}-{{.TARGET}}
    cmd: watchexec --fs-events create,rename,modify --debounce 150ms --no-vcs-ignore --watch {{.DIST_DIR}}/build/{{.FULL_TARGET}} --filter {{.FULL_TARGET}} -- {{.DIST_DIR}}/build/{{.FULL_TARGET}}/{{.FULL_TARGET}} {{.CLI_ARGS}}
